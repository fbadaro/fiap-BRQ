// <auto-generated />
using System;
using Fiap.BRQ.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fiap.BRQ.Data.Migrations
{
    [DbContext(typeof(BRQDBContext))]
    [Migration("20220429010209_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Fiap.BRQ.Core.Domain.Candidato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BRQ01_CANDIDATO", (string)null);
                });

            modelBuilder.Entity("Fiap.BRQ.Core.Domain.Certificado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoCredencial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataExpiracao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Expiracao")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("OrganizacaoEmissora")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("UrlCredencial")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("BRQ03_CERTIFICADO", (string)null);
                });

            modelBuilder.Entity("Fiap.BRQ.Core.Domain.Especialidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CandidatoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CertificadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.HasIndex("CertificadoId");

                    b.ToTable("BRQ02_ESPECIALIDADE", (string)null);
                });

            modelBuilder.Entity("Fiap.BRQ.Core.Domain.Candidato", b =>
                {
                    b.OwnsOne("Fiap.BRQ.Core.Aggregate.CPF", "CPF", b1 =>
                        {
                            b1.Property<Guid>("CandidatoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Emissor")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasMaxLength(11)
                                .HasColumnType("nvarchar(11)");

                            b1.Property<string>("UF")
                                .IsRequired()
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.HasKey("CandidatoId");

                            b1.ToTable("BRQ01_CANDIDATO");

                            b1.WithOwner()
                                .HasForeignKey("CandidatoId");
                        });

                    b.OwnsOne("Fiap.BRQ.Core.Aggregate.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("CandidatoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Endereco")
                                .IsRequired()
                                .HasMaxLength(150)
                                .HasColumnType("nvarchar(150)");

                            b1.HasKey("CandidatoId");

                            b1.ToTable("BRQ01_CANDIDATO");

                            b1.WithOwner()
                                .HasForeignKey("CandidatoId");
                        });

                    b.OwnsOne("Fiap.BRQ.Core.Aggregate.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("CandidatoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasMaxLength(150)
                                .HasColumnType("nvarchar(150)");

                            b1.Property<string>("CEP")
                                .IsRequired()
                                .HasMaxLength(9)
                                .HasColumnType("nvarchar(9)");

                            b1.Property<string>("Complemento")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasMaxLength(150)
                                .HasColumnType("nvarchar(150)");

                            b1.HasKey("CandidatoId");

                            b1.ToTable("BRQ01_CANDIDATO");

                            b1.WithOwner()
                                .HasForeignKey("CandidatoId");
                        });

                    b.OwnsOne("Fiap.BRQ.Core.Aggregate.RG", "RG", b1 =>
                        {
                            b1.Property<Guid>("CandidatoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("nvarchar(15)");

                            b1.HasKey("CandidatoId");

                            b1.ToTable("BRQ01_CANDIDATO");

                            b1.WithOwner()
                                .HasForeignKey("CandidatoId");
                        });

                    b.Navigation("CPF")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Endereco")
                        .IsRequired();

                    b.Navigation("RG")
                        .IsRequired();
                });

            modelBuilder.Entity("Fiap.BRQ.Core.Domain.Especialidade", b =>
                {
                    b.HasOne("Fiap.BRQ.Core.Domain.Candidato", "Candidato")
                        .WithMany("Especialidades")
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fiap.BRQ.Core.Domain.Certificado", "Certificado")
                        .WithMany()
                        .HasForeignKey("CertificadoId");

                    b.Navigation("Candidato");

                    b.Navigation("Certificado");
                });

            modelBuilder.Entity("Fiap.BRQ.Core.Domain.Candidato", b =>
                {
                    b.Navigation("Especialidades");
                });
#pragma warning restore 612, 618
        }
    }
}
